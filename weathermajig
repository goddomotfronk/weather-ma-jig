#!/usr/bin/env bash
yahoo_app_id="yGv9NWHV34GQ4FyA6.COP1blzCbYjHD3IzLJhlmK.b.4YpCWqv.D6LxDUodHiNyDGg--"

show_help() {
  cat<<USE
  USAGE: 
    weather-ma-jig <place>
  OPTIONS:
    --short|-s: short output
  EXAMPLE: 
    weather-ma-jig Boulder
USE
}

setup_emoji() {
  if [[ "$(uname -s)" == "Darwin" ]]; then
    sun="🌞 "
    snow="❄️ "
    rain="☔ "
    cloud="⛅ "
    default="🌏 "
  else
    sun="☀ "
    snow="❄ "
    rain="☂ "
    cloud="☁ "
    default="✔ "
  fi
}

check_woeid() {
  woeid=$(curl -s "http://where.yahooapis.com/v1/places.q(${place_url})?appid=${yahoo_app_id}" | grep -i woeid | sed 's/.*<woeid>\(.*\)<\/woeid>.*/\1/')

  if [[ -z "$woeid" ]]; then
      echo "$place_url ain't no place I ever heard of…"
      exit 1
  fi
}

set_dow() {
  dow=$(date +%a)
  if [[ $(uname -s) == "Darwin" ]]; then
    next_dow="$(date -v+1d +%a)"
  else
    next_dow="$(date -d "+1 day" +%a)"
  fi

  today=1
}

get_forecast() {
  weather_xml=$(curl -s "http://weather.yahooapis.com/forecastrss?u=f&w=${woeid}")
  city=$(echo "${weather_xml}" | grep -m 1 -i '<title>Yahoo! Weather' | sed 's/.*<title>Yahoo! Weather - \([^"]*\)<\/title>.*/\1/')
  cur_temp=$(echo "${weather_xml}" | grep -m 1 -i '<yweather:condition' | sed -e 's/.*temp="\([0-9]*\)" .*/\1ºF/')

  dow_ln=$(echo "${weather_xml}" | grep -m 1 -i "<yweather:forecast day=\"${dow}\"")

  if [ -z "$dow_ln" ]; then
      dow_ln=$(echo "${weather_xml}" | grep -m 1 -i "<yweather:forecast day=\"${next_dow}\"")
      today=0
  fi

  forecast=$(echo "${dow_ln}" | sed -e "s/.*low=\"\(.*\)\" high=\"\(.*\)\" text=\"\([a-zA-Z \\\/_\|,]*\)\" .*/\2ºF \1ºF \3/")
}

setup_output() {
  IFS=' ' read -r high low conditions < <(echo $forecast)

  if (( "$today" == 1 )); then
      date_string=$(date +"%A, %B %d %Y")
  else
    if [[ $(uname -s) == 'Darwin' ]]; then
      date_string=$(date -v+1d +"%A, %B %d %Y")
    else
      date_string=$(date -d "+1 day" +"%A, %B %d %Y")
    fi
  fi
}

discern_emoji() {
  case "$conditions" in
    "sunny")
      emoji="$sun"
      ;;
    "snow")
      emoji="$snow"
      ;;
    storm|rain|shower|drizzle)
      emoji="$rain"
      ;;
    cloud)
      emoji="$cloud"
      ;;
    *)
      emoji="$default"
  esac
}

echo_output() {
  if (( "$short" == 0 )); then
    echo -e "\n$date\nForecast for $city\n===========================\nCURRENTLY: $cur_temp\nHIGH: $high\nLOW: $low"
  fi

  echo -e "$emoji  $conditions";
}

init() {
  setup_emoji
  check_woeid
  set_dow
  get_forecast
  setup_output
  discern_emoji
  echo_output
}

main() {
  short=0

  while [ -n "$1" ]; do
    case "$1" in
      --short|-s)
        short=1
        ;;
      *)
        place="$1"
        place_url="${1/ /%20}"
    esac
    shift
  done

  init
}

if (( "$#" == 0 )); then
  show_help
  exit 1
elif [[ -z "$yahoo_app_id" ]]; then
  echo "App id must be set"
else
  main "$@"
fi
